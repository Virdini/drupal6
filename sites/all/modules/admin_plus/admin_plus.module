<?php

/**
 * Implementation of admin_plus_init().
 */
function admin_plus_init() {
  if (user_access('use admin toolbar') && admin_get_settings('layout') == 'horizontal_plus') {
    $path = drupal_get_path('module', 'admin_plus');
    drupal_add_js("{$path}/admin_plus.js");
    drupal_add_css("{$path}/admin_plus.css");
  }
}

/**
 * Return a themed list of items.
 *
 * @param $items
 *   An array of items to be displayed in the list. If an item is a string,
 *   then it is used as is. If an item is an array, then the "data" element of
 *   the array is used as the contents of the list item. If an item is an array
 *   with a "children" element, those children are displayed in a nested list.
 *   All other elements are treated as attributes of the list item element.
 * @param $title
 *   The title of the list.
 * @param $type
 *   The type of list to return (e.g. "ul", "ol")
 * @param $attributes
 *   The attributes applied to the list element.
 * @return
 *   A string containing the list output.
 */
function theme_admin_plus_item_list($items = array(), $title = NULL, $type = 'ul', $attributes = NULL) {
  if (isset($title)) {
    $output .= '<h3>'. $title .'</h3>';
  }

  if (!empty($items)) {
    $output .= "<$type". drupal_attributes($attributes) .'>';
    $num_items = count($items);
    foreach ($items as $i => $item) {
      $attributes = array();
      $children = array();
      if (is_array($item)) {
        foreach ($item as $key => $value) {
          if ($key == 'data') {
            $data = $value;
          }
          elseif ($key == 'children') {
            $children = $value;
          }
          else {
            $attributes[$key] = $value;
          }
        }
      }
      else {
        $data = $item;
      }
      if (count($children) > 0) {
        $data .= theme_item_list($children, NULL, $type, $attributes); // Render nested list
      }
      if ($i == 0) {
        $attributes['class'] = empty($attributes['class']) ? 'first' : ($attributes['class'] .' first');
      }
      if ($i == $num_items - 1) {
        $attributes['class'] = empty($attributes['class']) ? 'last' : ($attributes['class'] .' last');
      }
      $output .= '<li'. drupal_attributes($attributes) .'>'. $data ."</li>\n";
    }
    $output .= "</$type>";
  }
  return $output;
}

function admin_plus_form_admin_settings_form_alter (&$form, &$form_state) {
  $form['admin_toolbar']['layout']['#options']['horizontal_plus'] = t('Horizontal') .' plus';
}

/**
 * Implementation of hook_theme_registry_alter().
 */
function admin_plus_theme_registry_alter(&$theme_registry) {
  $theme_registry['admin_toolbar'] = $theme_registry['admin_plus_toolbar'];
}

function theme_admin_plus_toolbar ($blocks, $position, $layout, $behavior) {
  if (admin_get_settings('layout') == 'horizontal_plus') {
    return theme('admin_plus_toolbar_plus', $blocks, $position, $layout, $behavior);
  }
  return theme('admin_plus_toolbar_default', $blocks, $position, $layout, $behavior);
}
/**
 * Implementation of hook_theme().
 */
function admin_plus_theme($existing, $type, $theme, $path) {
  $items['admin_plus_toolbar_default'] = array(
    'arguments' => array(
      'blocks' => array(),
      'position' => 'ne',
      'layout' => 'horizontal',
      'behavior' => 'df',
    ),
    'template' => 'admin-toolbar',
    'path' => drupal_get_path('module', 'admin') . '/theme',
    'file' => 'theme.inc',
    'preprocess functions' => array('template_preprocess_admin_toolbar'),
  );
  $items['admin_plus_toolbar'] = array(
    'arguments' => array(
      'blocks' => array(),
      'position' => 'ne',
      'layout' => 'horizontal',
      'behavior' => 'df',
    ),
  );
  $items['admin_plus_toolbar_plus'] = array(
    'arguments' => array(
      'blocks' => array(),
      'position' => 'ne',
      'layout' => 'horizontal_plus',
      'behavior' => 'df',
    ),
    'template' => 'admin-plus-toolbar',
  );
  $items['admin_plus_item_list'] = array(
    'arguments' => array(
      'items' => array(),
      'title' => NULL,
      'type' => 'ul',
      'attributes' => NULL,
    ),
  );
  return $items;
}

/**
 * Preprocessor for theme('admin_plus_toolbar_plus').
 */
function template_preprocess_admin_plus_toolbar_plus(&$vars) {
  if (!empty($vars['blocks'])) {
    $items = array();
    foreach ($vars['blocks'] as $bid => $block) {
      $item = array();
      $item['data'] = '<span>'. $block->subject .'</span>';
      $item['data'] .= in_array($bid, array('admin-theme', 'admin-devel')) ?
      theme('admin_plus_item_list', array($block->content)) : $block->content;
      $item['class'] = $block->class .' top-level';
      $item['id'] = 'admin-tab-'. $bid;
      $items[] = $item;
    }
    $vars['content'] = theme('admin_plus_item_list', $items, NULL, 'ul', array('class' => 'flexnav'));
  }
}